{"ast":null,"code":"import React,{useEffect,useState,useCallback}from'react';import{useNavigate}from'react-router-dom';import{Container,Typography,Grid,Card,CardContent,CardHeader,Button,TextField,Box,Alert,CircularProgress,Tabs,Tab,Dialog,DialogTitle,DialogContent,DialogActions}from'@mui/material';import SecurityIcon from'@mui/icons-material/Security';import WarningIcon from'@mui/icons-material/Warning';import CheckCircleIcon from'@mui/icons-material/CheckCircle';import axios from'axios';import{debounce}from'lodash';import{ENDPOINTS,SCAN_TYPES}from'../constants/api';import{isTokenValid,getAuthHeader,removeToken}from'../utils/auth';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Dashboard(){const navigate=useNavigate();const[activeTab,setActiveTab]=useState(0);const[scanUrl,setScanUrl]=useState('');const[scanType,setScanType]=useState(SCAN_TYPES.VULNERABILITY);const[scanning,setScanning]=useState(false);const[scanResults,setScanResults]=useState(null);const[error,setError]=useState('');const[monitoringId,setMonitoringId]=useState(null);const[monitoringResults,setMonitoringResults]=useState(null);const[confirmDialog,setConfirmDialog]=useState(false);const[pollingInterval,setPollingInterval]=useState(null);// Validate URL format\nconst isValidUrl=url=>{try{new URL(url);return true;}catch(_unused){return false;}};// Debounced URL validation\nconst debouncedUrlValidation=useCallback(debounce(url=>{if(url&&!isValidUrl(url)){setError('Please enter a valid URL');}else{setError('');}},500),[]);useEffect(()=>{if(!isTokenValid()){removeToken();navigate('/login');}},[navigate]);useEffect(()=>{debouncedUrlValidation(scanUrl);return()=>debouncedUrlValidation.cancel();},[scanUrl,debouncedUrlValidation]);useEffect(()=>{return()=>{if(pollingInterval){clearInterval(pollingInterval);}};},[pollingInterval]);const handleScan=async()=>{if(!isValidUrl(scanUrl)){setError('Please enter a valid URL');return;}setScanning(true);setError('');try{const response=await axios.post(ENDPOINTS.SCAN,{url:scanUrl,scanType},{headers:getAuthHeader()});setScanResults(response.data);}catch(err){var _err$response,_err$response$data,_err$response2;setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||'Scan failed. Please try again.');if(((_err$response2=err.response)===null||_err$response2===void 0?void 0:_err$response2.status)===401){removeToken();navigate('/login');}}setScanning(false);};const startMonitoring=async()=>{if(!isValidUrl(scanUrl)){setError('Please enter a valid URL');return;}try{const response=await axios.post(ENDPOINTS.MONITOR,{url:scanUrl},{headers:getAuthHeader()});setMonitoringId(response.data.monitoringId);const interval=setInterval(()=>pollMonitoringResults(response.data.monitoringId),5000);setPollingInterval(interval);}catch(err){var _err$response3,_err$response3$data,_err$response4;setError(((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.error)||'Failed to start monitoring');if(((_err$response4=err.response)===null||_err$response4===void 0?void 0:_err$response4.status)===401){removeToken();navigate('/login');}}};const stopMonitoring=()=>{if(pollingInterval){clearInterval(pollingInterval);setPollingInterval(null);}setMonitoringId(null);setMonitoringResults(null);};const pollMonitoringResults=async id=>{try{const response=await axios.get(ENDPOINTS.MONITOR_STATUS(id),{headers:getAuthHeader()});setMonitoringResults(response.data);}catch(err){var _err$response5;console.error('Failed to get monitoring results:',err);if(((_err$response5=err.response)===null||_err$response5===void 0?void 0:_err$response5.status)===401){removeToken();navigate('/login');}}};const handleTabChange=(event,newValue)=>{setActiveTab(newValue);if(newValue!==2&&monitoringId){stopMonitoring();}};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"Security Dashboard\"}),/*#__PURE__*/_jsx(Box,{sx:{mb:4},children:/*#__PURE__*/_jsxs(Tabs,{value:activeTab,onChange:handleTabChange,children:[/*#__PURE__*/_jsx(Tab,{label:\"Overview\"}),/*#__PURE__*/_jsx(Tab,{label:\"Security Scan\"}),/*#__PURE__*/_jsx(Tab,{label:\"Monitoring\"})]})}),activeTab===0&&/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{avatar:/*#__PURE__*/_jsx(SecurityIcon,{color:\"primary\"}),title:\"Security Status\"}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"All systems are secure and up to date.\"})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{avatar:/*#__PURE__*/_jsx(WarningIcon,{color:\"warning\"}),title:\"Active Threats\"}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"No active threats detected.\"})})]})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:4,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{avatar:/*#__PURE__*/_jsx(CheckCircleIcon,{color:\"success\"}),title:\"System Health\"}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"All systems are operating normally.\"})})]})})]}),activeTab===1&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Security Scan\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Website URL\",value:scanUrl,onChange:e=>setScanUrl(e.target.value),margin:\"normal\",error:!!error,helperText:error})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsxs(TextField,{fullWidth:true,select:true,label:\"Scan Type\",value:scanType,onChange:e=>setScanType(e.target.value),margin:\"normal\",SelectProps:{native:true},children:[/*#__PURE__*/_jsx(\"option\",{value:SCAN_TYPES.VULNERABILITY,children:\"Vulnerability Scan\"}),/*#__PURE__*/_jsx(\"option\",{value:SCAN_TYPES.CONFIGURATION,children:\"Configuration Check\"}),/*#__PURE__*/_jsx(\"option\",{value:SCAN_TYPES.SSL,children:\"SSL Certificate Check\"})]})})]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:()=>setConfirmDialog(true),disabled:scanning||!scanUrl||!!error,sx:{mt:2},children:scanning?/*#__PURE__*/_jsx(CircularProgress,{size:24}):'Start Scan'}),error&&/*#__PURE__*/_jsx(Alert,{severity:\"error\",sx:{mt:2},children:error}),scanResults&&/*#__PURE__*/_jsxs(Card,{sx:{mt:4},children:[/*#__PURE__*/_jsx(CardHeader,{title:\"Scan Results\"}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Score: \",scanResults.results.score]}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Vulnerabilities:\"}),/*#__PURE__*/_jsx(\"ul\",{children:scanResults.results.vulnerabilities.map((vuln,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[vuln.type,\" - \",vuln.severity,\": \",vuln.description]},index))}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Recommendations:\"}),/*#__PURE__*/_jsx(\"ul\",{children:scanResults.recommendations.map((rec,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[rec.issue,\": \",rec.recommendation]},index))})]})]})]}),activeTab===2&&/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,children:\"Threat Monitoring\"}),/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Website URL\",value:scanUrl,onChange:e=>setScanUrl(e.target.value),margin:\"normal\",error:!!error,helperText:error})})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:startMonitoring,disabled:!scanUrl||!!error||monitoringId,sx:{mt:2},children:\"Start Monitoring\"}),monitoringId&&/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"secondary\",onClick:stopMonitoring,sx:{mt:2,ml:2},children:\"Stop Monitoring\"}),monitoringResults&&/*#__PURE__*/_jsxs(Card,{sx:{mt:4},children:[/*#__PURE__*/_jsx(CardHeader,{title:\"Monitoring Results\"}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[\"Status: \",monitoringResults.status]}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Threats Detected:\"}),/*#__PURE__*/_jsx(\"ul\",{children:monitoringResults.threats.map((threat,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[threat.type,\" - \",threat.severity,\" at \",new Date(threat.timestamp).toLocaleString()]},index))}),/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"Metrics:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[\"Total Requests: \",monitoringResults.metrics.requests]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Blocked Requests: \",monitoringResults.metrics.blocked]}),/*#__PURE__*/_jsxs(\"li\",{children:[\"Suspicious Activities: \",monitoringResults.metrics.suspicious]})]})]})]})]}),/*#__PURE__*/_jsxs(Dialog,{open:confirmDialog,onClose:()=>setConfirmDialog(false),children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Confirm Scan\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Typography,{children:[\"Are you sure you want to scan \",scanUrl,\"? This may take a few minutes.\"]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setConfirmDialog(false),children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>{setConfirmDialog(false);handleScan();},color:\"primary\",children:\"Start Scan\"})]})]})]});}export default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","useCallback","useNavigate","Container","Typography","Grid","Card","CardContent","CardHeader","Button","TextField","Box","Alert","CircularProgress","Tabs","Tab","Dialog","DialogTitle","DialogContent","DialogActions","SecurityIcon","WarningIcon","CheckCircleIcon","axios","debounce","ENDPOINTS","SCAN_TYPES","isTokenValid","getAuthHeader","removeToken","jsx","_jsx","jsxs","_jsxs","Dashboard","navigate","activeTab","setActiveTab","scanUrl","setScanUrl","scanType","setScanType","VULNERABILITY","scanning","setScanning","scanResults","setScanResults","error","setError","monitoringId","setMonitoringId","monitoringResults","setMonitoringResults","confirmDialog","setConfirmDialog","pollingInterval","setPollingInterval","isValidUrl","url","URL","_unused","debouncedUrlValidation","cancel","clearInterval","handleScan","response","post","SCAN","headers","data","err","_err$response","_err$response$data","_err$response2","status","startMonitoring","MONITOR","interval","setInterval","pollMonitoringResults","_err$response3","_err$response3$data","_err$response4","stopMonitoring","id","get","MONITOR_STATUS","_err$response5","console","handleTabChange","event","newValue","maxWidth","children","variant","component","gutterBottom","sx","mb","value","onChange","label","container","spacing","item","xs","md","avatar","color","title","fullWidth","e","target","margin","helperText","select","SelectProps","native","CONFIGURATION","SSL","onClick","disabled","mt","size","severity","results","score","vulnerabilities","map","vuln","index","type","description","recommendations","rec","issue","recommendation","ml","threats","threat","Date","timestamp","toLocaleString","metrics","requests","blocked","suspicious","open","onClose"],"sources":["C:/Users/admin/cybersecurity-platform (6)/cybersecurity-platform v1/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Button,\r\n  TextField,\r\n  Box,\r\n  Alert,\r\n  CircularProgress,\r\n  Tabs,\r\n  Tab,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from '@mui/material';\r\nimport SecurityIcon from '@mui/icons-material/Security';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport axios from 'axios';\r\nimport { debounce } from 'lodash';\r\nimport { ENDPOINTS, SCAN_TYPES } from '../constants/api';\r\nimport { isTokenValid, getAuthHeader, removeToken } from '../utils/auth';\r\n\r\nfunction Dashboard() {\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [scanUrl, setScanUrl] = useState('');\r\n  const [scanType, setScanType] = useState(SCAN_TYPES.VULNERABILITY);\r\n  const [scanning, setScanning] = useState(false);\r\n  const [scanResults, setScanResults] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [monitoringId, setMonitoringId] = useState(null);\r\n  const [monitoringResults, setMonitoringResults] = useState(null);\r\n  const [confirmDialog, setConfirmDialog] = useState(false);\r\n  const [pollingInterval, setPollingInterval] = useState(null);\r\n\r\n  // Validate URL format\r\n  const isValidUrl = (url) => {\r\n    try {\r\n      new URL(url);\r\n      return true;\r\n    } catch {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // Debounced URL validation\r\n  const debouncedUrlValidation = useCallback(\r\n    debounce((url) => {\r\n      if (url && !isValidUrl(url)) {\r\n        setError('Please enter a valid URL');\r\n      } else {\r\n        setError('');\r\n      }\r\n    }, 500),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!isTokenValid()) {\r\n      removeToken();\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    debouncedUrlValidation(scanUrl);\r\n    return () => debouncedUrlValidation.cancel();\r\n  }, [scanUrl, debouncedUrlValidation]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (pollingInterval) {\r\n        clearInterval(pollingInterval);\r\n      }\r\n    };\r\n  }, [pollingInterval]);\r\n\r\n  const handleScan = async () => {\r\n    if (!isValidUrl(scanUrl)) {\r\n      setError('Please enter a valid URL');\r\n      return;\r\n    }\r\n\r\n    setScanning(true);\r\n    setError('');\r\n    try {\r\n      const response = await axios.post(\r\n        ENDPOINTS.SCAN,\r\n        { url: scanUrl, scanType },\r\n        { headers: getAuthHeader() }\r\n      );\r\n      setScanResults(response.data);\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Scan failed. Please try again.');\r\n      if (err.response?.status === 401) {\r\n        removeToken();\r\n        navigate('/login');\r\n      }\r\n    }\r\n    setScanning(false);\r\n  };\r\n\r\n  const startMonitoring = async () => {\r\n    if (!isValidUrl(scanUrl)) {\r\n      setError('Please enter a valid URL');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        ENDPOINTS.MONITOR,\r\n        { url: scanUrl },\r\n        { headers: getAuthHeader() }\r\n      );\r\n      setMonitoringId(response.data.monitoringId);\r\n      const interval = setInterval(() => pollMonitoringResults(response.data.monitoringId), 5000);\r\n      setPollingInterval(interval);\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Failed to start monitoring');\r\n      if (err.response?.status === 401) {\r\n        removeToken();\r\n        navigate('/login');\r\n      }\r\n    }\r\n  };\r\n\r\n  const stopMonitoring = () => {\r\n    if (pollingInterval) {\r\n      clearInterval(pollingInterval);\r\n      setPollingInterval(null);\r\n    }\r\n    setMonitoringId(null);\r\n    setMonitoringResults(null);\r\n  };\r\n\r\n  const pollMonitoringResults = async (id) => {\r\n    try {\r\n      const response = await axios.get(\r\n        ENDPOINTS.MONITOR_STATUS(id),\r\n        { headers: getAuthHeader() }\r\n      );\r\n      setMonitoringResults(response.data);\r\n    } catch (err) {\r\n      console.error('Failed to get monitoring results:', err);\r\n      if (err.response?.status === 401) {\r\n        removeToken();\r\n        navigate('/login');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n    if (newValue !== 2 && monitoringId) {\r\n      stopMonitoring();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Security Dashboard\r\n      </Typography>\r\n\r\n      <Box sx={{ mb: 4 }}>\r\n        <Tabs value={activeTab} onChange={handleTabChange}>\r\n          <Tab label=\"Overview\" />\r\n          <Tab label=\"Security Scan\" />\r\n          <Tab label=\"Monitoring\" />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      {activeTab === 0 && (\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardHeader\r\n                avatar={<SecurityIcon color=\"primary\" />}\r\n                title=\"Security Status\"\r\n              />\r\n              <CardContent>\r\n                <Typography variant=\"body1\">\r\n                  All systems are secure and up to date.\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardHeader\r\n                avatar={<WarningIcon color=\"warning\" />}\r\n                title=\"Active Threats\"\r\n              />\r\n              <CardContent>\r\n                <Typography variant=\"body1\">\r\n                  No active threats detected.\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <Card>\r\n              <CardHeader\r\n                avatar={<CheckCircleIcon color=\"success\" />}\r\n                title=\"System Health\"\r\n              />\r\n              <CardContent>\r\n                <Typography variant=\"body1\">\r\n                  All systems are operating normally.\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n\r\n      {activeTab === 1 && (\r\n        <Box>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Security Scan\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Website URL\"\r\n                value={scanUrl}\r\n                onChange={(e) => setScanUrl(e.target.value)}\r\n                margin=\"normal\"\r\n                error={!!error}\r\n                helperText={error}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                select\r\n                label=\"Scan Type\"\r\n                value={scanType}\r\n                onChange={(e) => setScanType(e.target.value)}\r\n                margin=\"normal\"\r\n                SelectProps={{\r\n                  native: true,\r\n                }}\r\n              >\r\n                <option value={SCAN_TYPES.VULNERABILITY}>Vulnerability Scan</option>\r\n                <option value={SCAN_TYPES.CONFIGURATION}>Configuration Check</option>\r\n                <option value={SCAN_TYPES.SSL}>SSL Certificate Check</option>\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setConfirmDialog(true)}\r\n            disabled={scanning || !scanUrl || !!error}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            {scanning ? <CircularProgress size={24} /> : 'Start Scan'}\r\n          </Button>\r\n\r\n          {error && (\r\n            <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n              {error}\r\n            </Alert>\r\n          )}\r\n\r\n          {scanResults && (\r\n            <Card sx={{ mt: 4 }}>\r\n              <CardHeader title=\"Scan Results\" />\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Score: {scanResults.results.score}</Typography>\r\n                <Typography variant=\"subtitle1\">Vulnerabilities:</Typography>\r\n                <ul>\r\n                  {scanResults.results.vulnerabilities.map((vuln, index) => (\r\n                    <li key={index}>\r\n                      {vuln.type} - {vuln.severity}: {vuln.description}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n                <Typography variant=\"subtitle1\">Recommendations:</Typography>\r\n                <ul>\r\n                  {scanResults.recommendations.map((rec, index) => (\r\n                    <li key={index}>\r\n                      {rec.issue}: {rec.recommendation}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n        </Box>\r\n      )}\r\n\r\n      {activeTab === 2 && (\r\n        <Box>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Threat Monitoring\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Website URL\"\r\n                value={scanUrl}\r\n                onChange={(e) => setScanUrl(e.target.value)}\r\n                margin=\"normal\"\r\n                error={!!error}\r\n                helperText={error}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={startMonitoring}\r\n            disabled={!scanUrl || !!error || monitoringId}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Start Monitoring\r\n          </Button>\r\n          {monitoringId && (\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={stopMonitoring}\r\n              sx={{ mt: 2, ml: 2 }}\r\n            >\r\n              Stop Monitoring\r\n            </Button>\r\n          )}\r\n\r\n          {monitoringResults && (\r\n            <Card sx={{ mt: 4 }}>\r\n              <CardHeader title=\"Monitoring Results\" />\r\n              <CardContent>\r\n                <Typography variant=\"h6\">Status: {monitoringResults.status}</Typography>\r\n                <Typography variant=\"subtitle1\">Threats Detected:</Typography>\r\n                <ul>\r\n                  {monitoringResults.threats.map((threat, index) => (\r\n                    <li key={index}>\r\n                      {threat.type} - {threat.severity} at {new Date(threat.timestamp).toLocaleString()}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n                <Typography variant=\"subtitle1\">Metrics:</Typography>\r\n                <ul>\r\n                  <li>Total Requests: {monitoringResults.metrics.requests}</li>\r\n                  <li>Blocked Requests: {monitoringResults.metrics.blocked}</li>\r\n                  <li>Suspicious Activities: {monitoringResults.metrics.suspicious}</li>\r\n                </ul>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n        </Box>\r\n      )}\r\n\r\n      <Dialog open={confirmDialog} onClose={() => setConfirmDialog(false)}>\r\n        <DialogTitle>Confirm Scan</DialogTitle>\r\n        <DialogContent>\r\n          <Typography>\r\n            Are you sure you want to scan {scanUrl}? This may take a few minutes.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setConfirmDialog(false)}>Cancel</Button>\r\n          <Button onClick={() => {\r\n            setConfirmDialog(false);\r\n            handleScan();\r\n          }} color=\"primary\">\r\n            Start Scan\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n}\r\n\r\nDashboard.propTypes = {\r\n  // Add PropTypes if needed\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}