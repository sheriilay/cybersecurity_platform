{"ast":null,"code":"import axios from'axios';import API_CONFIG from'../config/api';const authService={async login(username,password){try{const response=await axios.post(\"\".concat(API_CONFIG.BASE_URL).concat(API_CONFIG.ENDPOINTS.AUTH.LOGIN),{username,password});const{accessToken,refreshToken,user}=response.data;this.setTokens(accessToken,refreshToken);return user;}catch(error){throw this.handleError(error);}},async register(username,password,email){try{const response=await axios.post(\"\".concat(API_CONFIG.BASE_URL).concat(API_CONFIG.ENDPOINTS.AUTH.REGISTER),{username,password,email});const{accessToken,refreshToken,user}=response.data;this.setTokens(accessToken,refreshToken);return user;}catch(error){throw this.handleError(error);}},async refreshToken(){try{const refreshToken=localStorage.getItem(API_CONFIG.TOKENS.REFRESH);if(!refreshToken){throw new Error('No refresh token available');}const response=await axios.post(\"\".concat(API_CONFIG.BASE_URL).concat(API_CONFIG.ENDPOINTS.AUTH.REFRESH),{refreshToken});const{accessToken,refreshToken:newRefreshToken}=response.data;this.setTokens(accessToken,newRefreshToken);return accessToken;}catch(error){this.clearTokens();throw this.handleError(error);}},async verifyToken(){try{const token=this.getAccessToken();if(!token){throw new Error('No token available');}const response=await axios.get(\"\".concat(API_CONFIG.BASE_URL).concat(API_CONFIG.ENDPOINTS.AUTH.VERIFY),{headers:{Authorization:\"Bearer \".concat(token)}});return response.data.user;}catch(error){var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){try{await this.refreshToken();return this.verifyToken();}catch(refreshError){this.clearTokens();throw this.handleError(refreshError);}}throw this.handleError(error);}},logout(){this.clearTokens();},setTokens(accessToken,refreshToken){if(accessToken){localStorage.setItem(API_CONFIG.TOKENS.ACCESS,accessToken);}if(refreshToken){localStorage.setItem(API_CONFIG.TOKENS.REFRESH,refreshToken);}},clearTokens(){localStorage.removeItem(API_CONFIG.TOKENS.ACCESS);localStorage.removeItem(API_CONFIG.TOKENS.REFRESH);},getAccessToken(){return localStorage.getItem(API_CONFIG.TOKENS.ACCESS);},getRefreshToken(){return localStorage.getItem(API_CONFIG.TOKENS.REFRESH);},isAuthenticated(){return!!this.getAccessToken();},handleError(error){if(error.response){var _error$response$data,_error$response$data2;// The request was made and the server responded with a status code\n// that falls out of the range of 2xx\nconst message=((_error$response$data=error.response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||((_error$response$data2=error.response.data)===null||_error$response$data2===void 0?void 0:_error$response$data2.error)||'An error occurred';return new Error(message);}else if(error.request){// The request was made but no response was received\nreturn new Error('No response from server. Please check your connection.');}else{// Something happened in setting up the request that triggered an Error\nreturn new Error('Request failed. Please try again.');}}};// Add axios interceptor for token refresh\naxios.interceptors.response.use(response=>response,async error=>{var _error$response2;const originalRequest=error.config;if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===401&&!originalRequest._retry){originalRequest._retry=true;try{const newToken=await authService.refreshToken();originalRequest.headers.Authorization=\"Bearer \".concat(newToken);return axios(originalRequest);}catch(refreshError){authService.clearTokens();window.location.href='/login';return Promise.reject(refreshError);}}return Promise.reject(error);});// Add axios interceptor for adding token to requests\naxios.interceptors.request.use(config=>{const token=authService.getAccessToken();if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},error=>Promise.reject(error));export default authService;","map":{"version":3,"names":["axios","API_CONFIG","authService","login","username","password","response","post","concat","BASE_URL","ENDPOINTS","AUTH","LOGIN","accessToken","refreshToken","user","data","setTokens","error","handleError","register","email","REGISTER","localStorage","getItem","TOKENS","REFRESH","Error","newRefreshToken","clearTokens","verifyToken","token","getAccessToken","get","VERIFY","headers","Authorization","_error$response","status","refreshError","logout","setItem","ACCESS","removeItem","getRefreshToken","isAuthenticated","_error$response$data","_error$response$data2","message","request","interceptors","use","_error$response2","originalRequest","config","_retry","newToken","window","location","href","Promise","reject"],"sources":["C:/Users/admin/cybersecurity-platform (6)/cybersecurity-platform v1/frontend/src/services/auth.js"],"sourcesContent":["import axios from 'axios';\nimport API_CONFIG from '../config/api';\n\nconst authService = {\n  async login(username, password) {\n    try {\n      const response = await axios.post(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.AUTH.LOGIN}`, {\n        username,\n        password\n      });\n\n      const { accessToken, refreshToken, user } = response.data;\n      this.setTokens(accessToken, refreshToken);\n      return user;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  },\n\n  async register(username, password, email) {\n    try {\n      const response = await axios.post(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.AUTH.REGISTER}`, {\n        username,\n        password,\n        email\n      });\n\n      const { accessToken, refreshToken, user } = response.data;\n      this.setTokens(accessToken, refreshToken);\n      return user;\n    } catch (error) {\n      throw this.handleError(error);\n    }\n  },\n\n  async refreshToken() {\n    try {\n      const refreshToken = localStorage.getItem(API_CONFIG.TOKENS.REFRESH);\n      if (!refreshToken) {\n        throw new Error('No refresh token available');\n      }\n\n      const response = await axios.post(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.AUTH.REFRESH}`, {\n        refreshToken\n      });\n\n      const { accessToken, refreshToken: newRefreshToken } = response.data;\n      this.setTokens(accessToken, newRefreshToken);\n      return accessToken;\n    } catch (error) {\n      this.clearTokens();\n      throw this.handleError(error);\n    }\n  },\n\n  async verifyToken() {\n    try {\n      const token = this.getAccessToken();\n      if (!token) {\n        throw new Error('No token available');\n      }\n\n      const response = await axios.get(`${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.AUTH.VERIFY}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n\n      return response.data.user;\n    } catch (error) {\n      if (error.response?.status === 401) {\n        try {\n          await this.refreshToken();\n          return this.verifyToken();\n        } catch (refreshError) {\n          this.clearTokens();\n          throw this.handleError(refreshError);\n        }\n      }\n      throw this.handleError(error);\n    }\n  },\n\n  logout() {\n    this.clearTokens();\n  },\n\n  setTokens(accessToken, refreshToken) {\n    if (accessToken) {\n      localStorage.setItem(API_CONFIG.TOKENS.ACCESS, accessToken);\n    }\n    if (refreshToken) {\n      localStorage.setItem(API_CONFIG.TOKENS.REFRESH, refreshToken);\n    }\n  },\n\n  clearTokens() {\n    localStorage.removeItem(API_CONFIG.TOKENS.ACCESS);\n    localStorage.removeItem(API_CONFIG.TOKENS.REFRESH);\n  },\n\n  getAccessToken() {\n    return localStorage.getItem(API_CONFIG.TOKENS.ACCESS);\n  },\n\n  getRefreshToken() {\n    return localStorage.getItem(API_CONFIG.TOKENS.REFRESH);\n  },\n\n  isAuthenticated() {\n    return !!this.getAccessToken();\n  },\n\n  handleError(error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      const message = error.response.data?.message || error.response.data?.error || 'An error occurred';\n      return new Error(message);\n    } else if (error.request) {\n      // The request was made but no response was received\n      return new Error('No response from server. Please check your connection.');\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      return new Error('Request failed. Please try again.');\n    }\n  }\n};\n\n// Add axios interceptor for token refresh\naxios.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        const newToken = await authService.refreshToken();\n        originalRequest.headers.Authorization = `Bearer ${newToken}`;\n        return axios(originalRequest);\n      } catch (refreshError) {\n        authService.clearTokens();\n        window.location.href = '/login';\n        return Promise.reject(refreshError);\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\n// Add axios interceptor for adding token to requests\naxios.interceptors.request.use(\n  (config) => {\n    const token = authService.getAccessToken();\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\nexport default authService; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}